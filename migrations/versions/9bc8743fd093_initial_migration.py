"""initial migration

Revision ID: 9bc8743fd093
Revises: 
Create Date: 2025-04-05 15:48:31.927024

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '9bc8743fd093'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('elimination_operation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('description', sa.String(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('producer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('siret', sa.String(length=14), nullable=False),
    sa.Column('address', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('siret')
    )
    op.create_table('transporter',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('siret', sa.String(length=14), nullable=False),
    sa.Column('address', sa.Text(), nullable=False),
    sa.Column('registration', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('registration'),
    sa.UniqueConstraint('siret')
    )
    op.create_table('treatment_operation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=10), nullable=False),
    sa.Column('description', sa.String(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('first_name', sa.String(length=64), nullable=True),
    sa.Column('last_name', sa.String(length=64), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('active', sa.Boolean(), server_default='1', nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('waste_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=20), nullable=False),
    sa.Column('description', sa.String(length=128), nullable=False),
    sa.Column('dangerous', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('activity_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(length=20), nullable=False),
    sa.Column('entity_type', sa.String(length=50), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=False),
    sa.Column('details', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('activity_log', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_activity_log_timestamp'), ['timestamp'], unique=False)

    op.create_table('waste_record',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('producer_id', sa.Integer(), nullable=False),
    sa.Column('destination', sa.String(length=128), nullable=False),
    sa.Column('transporter_id', sa.Integer(), nullable=False),
    sa.Column('treatment_operation_id', sa.Integer(), nullable=False),
    sa.Column('elimination_operation_id', sa.Integer(), nullable=True),
    sa.Column('tracking_number', sa.String(length=64), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['elimination_operation_id'], ['elimination_operation.id'], ),
    sa.ForeignKeyConstraint(['producer_id'], ['producer.id'], ),
    sa.ForeignKeyConstraint(['transporter_id'], ['transporter.id'], ),
    sa.ForeignKeyConstraint(['treatment_operation_id'], ['treatment_operation.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tracking_number')
    )
    with op.batch_alter_table('waste_record', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_waste_record_date'), ['date'], unique=False)
        batch_op.create_index(batch_op.f('ix_waste_record_timestamp'), ['timestamp'], unique=False)

    op.create_table('waste_entry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('waste_record_id', sa.Integer(), nullable=False),
    sa.Column('waste_type_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(length=10), nullable=False),
    sa.ForeignKeyConstraint(['waste_record_id'], ['waste_record.id'], ),
    sa.ForeignKeyConstraint(['waste_type_id'], ['waste_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('waste_entry')
    with op.batch_alter_table('waste_record', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_waste_record_timestamp'))
        batch_op.drop_index(batch_op.f('ix_waste_record_date'))

    op.drop_table('waste_record')
    with op.batch_alter_table('activity_log', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_activity_log_timestamp'))

    op.drop_table('activity_log')
    op.drop_table('waste_type')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    op.drop_table('treatment_operation')
    op.drop_table('transporter')
    op.drop_table('producer')
    op.drop_table('elimination_operation')
    # ### end Alembic commands ###
